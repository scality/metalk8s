apiVersion: v1
kind: Pod
metadata:
  name: "metalk8s-integration-tests-ui"
spec:
  initContainers:
  - name: shell-ui
    image: {{ images['shell-ui'] }}
    resources:
      requests:
        cpu: 250m
        memory: 200Mi
      limits:
        cpu: 350m
        memory: 300Mi
    command: ["/bin/sh"]
    args: 
      - -c
      - |
        cat > /usr/share/nginx/html/shell/config.json <<EOF
        {
          "docUrl": "/docs",
          "oidc": {
            "providerUrl": "/oidc",
            "redirectUrl": "/",
            "clientId": "metalk8s-ui",
            "responseType": "id_token",
            "scopes": "openid profile email groups offline_access audience:server:client_id:oidc-auth-client"
          }
        }
        EOF
        cp -r /usr/share/nginx/html/ /tmp/shell-ui-files
    volumeMounts:
      - name: shell-ui-files
        mountPath: /tmp/shell-ui-files
  hostIPC: true
  containers:
  - name: worker
    image: {{ images['worker'] }}
    resources:
      requests:
        cpu: 1500m
        memory: 2Gi
      limits:
        cpu: '2'
        memory: 3Gi
    command: ["/bin/sh"]
    args: ["-c", "buildbot-worker create-worker . ${BUILDMASTER}:${BUILDMASTER_PORT} ${WORKERNAME} ${WORKERPASS} && buildbot-worker start --nodaemon"]
    volumeMounts:
      - name: worker-workspace
        mountPath: /home/eve/workspace
    
  - name: application
    image: {{ images['application'] }}
    resources:
      requests:
        cpu: 250m
        memory: 200Mi
      limits:
        cpu: 350m
        memory: 300Mi
    command: ["/bin/sh"]
    args: 
      - -c
      - |
        cp -r /tmp/shell-ui-files/html/shell/ /usr/share/nginx/html/
        nginx -g 'daemon off;' 2>&1
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    volumeMounts:
      - name: shell-ui-files
        mountPath: /tmp/shell-ui-files
  volumes:
    - name: worker-workspace
      emptyDir: {}
    - name: shell-ui-files
      emptyDir: {}
