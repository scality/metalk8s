import { HTMLAttributes, HTMLProps, ReactNode } from 'react';
import { BoxComponentProps } from './components/box/Box';
export declare const spacing: {
    r1: string;
    r2: string;
    r4: string;
    r8: string;
    r10: string;
    r12: string;
    r14: string;
    r16: string;
    r20: string;
    r24: string;
    r28: string;
    r32: string;
    r36: string;
    r40: string;
    f1: string;
    f2: string;
    f4: string;
    f8: string;
    f10: string;
    f12: string;
    f14: string;
    f16: string;
    f20: string;
    f24: string;
    f28: string;
    f32: string;
    f36: string;
    f40: string;
};
export declare const Stack: ({ gap, direction, withSeparators, children, ...rest }: {
    gap?: "r1" | "r2" | "r4" | "r8" | "r10" | "r12" | "r14" | "r16" | "r20" | "r24" | "r28" | "r32" | "r36" | "r40" | "f1" | "f2" | "f4" | "f8" | "f10" | "f12" | "f14" | "f16" | "f20" | "f24" | "f28" | "f32" | "f36" | "f40" | undefined;
    direction?: "vertical" | "horizontal" | undefined;
    withSeparators?: boolean | undefined;
    children: ReactNode[];
} & HTMLAttributes<HTMLDivElement>) => JSX.Element;
export declare const Wrap: ({ children, ...rest }: {
    children: ReactNode[];
} & Omit<HTMLProps<HTMLDivElement>, "ref" | "as"> & import("styled-system").LayoutProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> & import("styled-system").FlexboxProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> & import("styled-system").GridProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> & import("styled-system").SpaceProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>, string | number | symbol> & import("styled-system").PositionProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> & import("styled-system").ColorProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>, string | number | symbol> & import("styled-system").BackgroundProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>, import("csstype").Property.Background<import("styled-system").TLengthStyledSystem>> & import("styled-system").BordersProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> & import("styled-system").TypographyProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> & import("styled-system").ShadowProps<Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> & {
    gap?: string | number | undefined;
}) => JSX.Element;
//# sourceMappingURL=spacing.d.ts.map