/// <reference types="react" />
import { OptionProps, SelectProps } from '../selectv2/Selectv2.component';
type OptionValue = {
    label?: string;
} & OptionProps;
type Props = {
    options?: OptionValue[];
} & SelectProps;
export declare const AllStatusIcon: () => JSX.Element;
export declare const defaultOptions: readonly [{
    readonly icon: JSX.Element;
    readonly label: "All Status";
    readonly value: "all";
}, {
    readonly icon: JSX.Element;
    readonly label: "Healthy";
    readonly value: "healthy";
}, {
    readonly icon: JSX.Element;
    readonly label: "Warning";
    readonly value: "warning";
}, {
    readonly icon: JSX.Element;
    readonly label: "Critical";
    readonly value: "critical";
}, {
    readonly icon: JSX.Element;
    readonly label: "Unknown";
    readonly value: "unknown";
}];
export declare const optionsDefaultConfiguration: {
    all: {
        readonly icon: JSX.Element;
        readonly label: "All Status";
        readonly value: "all";
    };
    healthy: {
        readonly icon: JSX.Element;
        readonly label: "Healthy";
        readonly value: "healthy";
    };
    warning: {
        readonly icon: JSX.Element;
        readonly label: "Warning";
        readonly value: "warning";
    };
    critical: {
        readonly icon: JSX.Element;
        readonly label: "Critical";
        readonly value: "critical";
    };
    unknown: {
        readonly icon: JSX.Element;
        readonly label: "Unknown";
        readonly value: "unknown";
    };
};
declare function HealthSelectorv2(props: Props): JSX.Element;
export declare const HealthSelector: typeof HealthSelectorv2;
export {};
//# sourceMappingURL=HealthSelector.component.d.ts.map