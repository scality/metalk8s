import React from 'react';
export type OptionProps = {
    title?: string;
    disabled?: boolean;
    icon?: React.ReactNode;
    children?: React.ReactNode;
    value: string;
    disabledReason?: React.ReactNode;
};
export declare function Option({ value, children, disabled, icon, disabledReason, ...rest }: OptionProps): JSX.Element;
export type SelectProps = {
    id: string;
    placeholder?: string;
    disabled?: boolean;
    children?: React.ReactNode;
    defaultValue?: string;
    value?: string;
    onFocus?: (event: FocusEvent) => void;
    onBlur?: (event: FocusEvent) => void;
    onChange: (newValue: string) => void;
    variant?: 'default' | 'rounded';
    size?: '1' | '2/3' | '1/2' | '1/3';
    className?: string;
    menuPosition?: 'fixed' | 'absolute';
};
declare function SelectWithOptionContext(props: SelectProps): JSX.Element;
declare namespace SelectWithOptionContext {
    var Option: typeof import("./Selectv2.component").Option;
}
export declare const Select: typeof SelectWithOptionContext;
export {};
//# sourceMappingURL=Selectv2.component.d.ts.map