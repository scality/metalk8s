import React, { FormHTMLAttributes, ReactElement, ReactNode } from 'react';
import { IconName } from '../icon/Icon.component';
declare const DESCRIPTION_PREFIX = "describe-";
declare const LABEL_PREFIX = "label-";
type FormProps = Omit<FormHTMLAttributes<HTMLFormElement>, 'noValidate' | 'formNoValidate'> & {
    children: ReactNode | ReactNode[];
    requireMode?: 'all' | 'partial';
    leftActions?: ReactNode;
    rightActions?: ReactNode;
    banner?: ReactNode;
};
type PageFormProps = {
    layout: {
        kind: 'page';
        title: string;
        subTitle?: string;
        icon?: IconName;
    };
} & FormProps;
type TabFormProps = {
    layout: {
        kind: 'tab';
    };
} & FormProps;
type ContentProps = {
    helper: string;
    error: string;
};
type FormGroupProps = {
    label: string;
    id: string;
    content: ReactElement<ContentProps>;
    direction?: 'vertical' | 'horizontal';
    labelHelpTooltip?: ReactNode;
    help?: string;
    error?: string;
    required?: boolean;
    helpErrorPosition?: 'right' | 'bottom';
    disabled?: boolean;
};
declare const FormGroup: ({ direction, label, id, labelHelpTooltip, content, help, error, required, helpErrorPosition, disabled, }: FormGroupProps) => JSX.Element;
type FormSectionProps = {
    children: ReactElement<FormGroupProps> | ReactElement<FormGroupProps>[];
    title?: {
        name: string;
        icon?: IconName;
        helpTooltip?: string;
    };
    forceLabelWidth?: number;
    rightActions?: ReactNode;
};
declare const FormSection: ({ children, title, forceLabelWidth, rightActions, }: FormSectionProps) => JSX.Element;
declare const Form: React.ForwardRefExoticComponent<(PageFormProps | TabFormProps) & React.RefAttributes<HTMLFormElement>>;
declare const useFieldContext: () => {
    isContextAvailable: boolean;
    error?: string | undefined;
    disabled?: boolean | undefined;
    required?: boolean | undefined;
};
export { Form, FormSection, FormGroup, useFieldContext, DESCRIPTION_PREFIX, LABEL_PREFIX, };
//# sourceMappingURL=Form.component.d.ts.map