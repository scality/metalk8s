import { Options } from 'vega-tooltip';
import { Handler } from 'vega-tooltip';
import { Serie } from '../LineTemporalChart.component';
export declare function defaultRenderTooltipSerie({ color, isLineDashed, name, value, key, }: {
    color?: string;
    isLineDashed?: boolean;
    name: string;
    value: string;
    key: string;
}): string;
export declare class TooltipHandlerWithPaint extends Handler {
    constructor(options?: Options, onHover?: (datum: any) => void);
    newCall(handler: any, event: MouseEvent, item: any, value: any): void;
    paint(): void;
}
/**
 * Format the value to be shown in the tooltip.
 *
 * @param value The value to show in the tooltip.
 * @param valueToHtml Function to convert a single cell value to an HTML string
 */
export declare function formatValue(series: Serie[], customizedColorRange: string[], colorRange: string[], unitLabel: string, yAxisType?: 'default' | 'percentage' | 'symmetrical', renderTooltipSerie?: (arg0: {
    color?: string;
    isLineDashed?: boolean;
    name: string;
    value: string;
    key: string;
    unitLabel: string;
}, tooltipData: any) => string): (value: any, valueToHtml: (value: any) => string, maxDepth: number) => string;
//# sourceMappingURL=index.d.ts.map