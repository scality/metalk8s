import * as React from 'react';
import { CoreUITheme } from '../../style/theme';
type Status = 'unknown' | 'healthy' | 'warning' | 'critical';
type Props = {
    children: React.ReactNode | string;
    status?: Status;
    id?: string;
};
export declare const SmallerEmphaseTextStyle: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, {
    statusColor: string;
}, never>;
export declare function BasicText({ children, ...rest }: Props): JSX.Element;
export declare function SecondaryText({ children, ...rest }: Props): JSX.Element;
export declare function LargerText({ children, ...rest }: Props): JSX.Element;
export declare function EmphaseText({ children, ...rest }: Props): JSX.Element;
export declare function StatusText({ children, status, ...rest }: Props): JSX.Element;
export declare function LargeText({ children, ...rest }: Props): JSX.Element;
export declare function SmallerText({ children, ...rest }: Props): JSX.Element;
export declare function SmallerSecondaryText({ children, ...rest }: Props): JSX.Element;
export declare function SmallerEmphaseText({ children, status, ...rest }: Props): JSX.Element;
export declare function ChartTitleText({ children, ...rest }: Props): JSX.Element;
export declare const GentleEmphaseSecondaryText: import("styled-components").StyledComponent<typeof SecondaryText, import("styled-components").DefaultTheme, {
    alignRight?: boolean | undefined;
}, never>;
export declare const Text: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, {
    variant?: "ChartTitle" | "Basic" | "Smaller" | "Larger" | "Large" | undefined;
    color?: keyof CoreUITheme | undefined;
    isEmphazed?: boolean | undefined;
    isGentleEmphazed?: boolean | undefined;
}, never>;
export declare const Link: import("styled-components").StyledComponent<"a", import("styled-components").DefaultTheme, {}, never>;
export {};
//# sourceMappingURL=Text.component.d.ts.map