[
  {
    "name": "ClusterAtRisk",
    "severity": "critical",
    "message": "The cluster is at risk.",
    "query": "(ALERTS{alertname=\"NodeAtRisk\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"PlatformServicesAtRisk\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"VolumeAtRisk\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "NodeAtRisk",
    "severity": "critical",
    "message": "The node {{ $labels.instance }} is at risk.",
    "query": "(ALERTS{alertname=\"KubeletClientCertificateExpiration\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"NodeRAIDDegraded\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"SystemPartitionAtRisk\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "SystemPartitionAtRisk",
    "severity": "critical",
    "message": "The system partition {{ $labels.mountpoint }} on node {{ $labels.instance }} is at risk.",
    "query": "(ALERTS{alertname=\"NodeFilesystemAlmostOutOfSpace\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"NodeFilesystemAlmostOutOfFiles\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"NodeFilesystemFilesFillingUp\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"NodeFilesystemSpaceFillingUp\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "PlatformServicesAtRisk",
    "severity": "critical",
    "message": "The Platform services are at risk.",
    "query": "(ALERTS{alertname=\"CoreServicesAtRisk\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"ObservabilityServicesAtRisk\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "CoreServicesAtRisk",
    "severity": "critical",
    "message": "The Core services are at risk.",
    "query": "(ALERTS{alertname=\"KubernetesControlPlaneAtRisk\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "KubernetesControlPlaneAtRisk",
    "severity": "critical",
    "message": "The Kubernetes control plane is at risk.",
    "query": "(ALERTS{alertname=\"KubeAPIErrorBudgetBurn\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"etcdHighNumberOfFailedGRPCRequests\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"etcdGRPCRequestsSlow\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"etcdHighNumberOfFailedHTTPRequests\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"etcdInsufficientMembers\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"etcdMembersDown\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"etcdNoLeader\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"KubeStateMetricsListErrors\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"KubeStateMetricsWatchErrors\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"KubeAPIDown\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"KubeClientCertificateExpiration\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"KubeControllerManagerDown\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"KubeletDown\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"KubeSchedulerDown\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "ObservabilityServicesAtRisk",
    "severity": "critical",
    "message": "The observability services are at risk.",
    "query": "(ALERTS{alertname=\"MonitoringServiceAtRisk\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"AlertingServiceAtRisk\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "MonitoringServiceAtRisk",
    "severity": "critical",
    "message": "The monitoring service is at risk.",
    "query": "(ALERTS{alertname=\"PrometheusRuleFailures\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"PrometheusRemoteWriteBehind\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"PrometheusRemoteStorageFailures\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"PrometheusErrorSendingAlertsToAnyAlertmanager\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"PrometheusBadConfig\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "AlertingServiceAtRisk",
    "severity": "critical",
    "message": "The alerting service is at risk.",
    "query": "(ALERTS{alertname=\"AlertmanagerConfigInconsistent\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"AlertmanagerMembersInconsistent\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"AlertmanagerFailedReload\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "VolumeAtRisk",
    "severity": "critical",
    "message": "The volume {{ $labels.persistentvolumeclaim }} in namespace {{ $labels.namespace }} on node {{ $labels.instance }} is at risk.",
    "query": "sum by(persistentvolumeclaim, namespace, instance) (ALERTS{alertname=\"KubePersistentVolumeFillingUp\",alertstate=\"firing\",severity=\"critical\"} or ALERTS{alertname=\"KubePersistentVolumeErrors\",alertstate=\"firing\",severity=\"critical\"}) >= 1"
  },
  {
    "name": "ClusterDegraded",
    "severity": "warning",
    "message": "The cluster is degraded.",
    "query": "(ALERTS{alertname=\"NetworkDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PlatformServicesDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"VolumeDegraded\",alertstate=\"firing\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "NetworkDegraded",
    "severity": "warning",
    "message": "The network is degraded.",
    "query": "(ALERTS{alertname=\"NodeNetworkReceiveErrs\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeHighNumberConntrackEntriesUsed\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeNetworkTransmitErrs\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeNetworkInterfaceFlapping\",alertstate=\"firing\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "NodeDegraded",
    "severity": "warning",
    "message": "The node {{ $labels.instance }} is degraded.",
    "query": "(ALERTS{alertname=\"KubeNodeNotReady\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeNodeReadinessFlapping\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeNodeUnreachable\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeletClientCertificateExpiration\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeletClientCertificateRenewalErrors\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeletPlegDurationHigh\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeletPodStartUpLatencyHigh\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeletServerCertificateExpiration\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeletServerCertificateRenewalErrors\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeletTooManyPods\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeClockNotSynchronising\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeClockSkewDetected\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeRAIDDiskFailure\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeTextFileCollectorScrapeError\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"SystemPartitionDegraded\",alertstate=\"firing\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "SystemPartitionDegraded",
    "severity": "warning",
    "message": "The system partition {{ $labels.mountpoint }} on node {{ $labels.instance }} is degraded.",
    "query": "(ALERTS{alertname=\"NodeFilesystemAlmostOutOfSpace\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeFilesystemAlmostOutOfFiles\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeFilesystemFilesFillingUp\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"NodeFilesystemSpaceFillingUp\",alertstate=\"firing\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "PlatformServicesDegraded",
    "severity": "warning",
    "message": "The Platform services are degraded.",
    "query": "(ALERTS{alertname=\"AccessServicesDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"CoreServicesDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"ObservabilityServicesDegraded\",alertstate=\"firing\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "AccessServicesDegraded",
    "severity": "warning",
    "message": "The Access services are degraded.",
    "query": "(ALERTS{alertname=\"AuthenticationServiceDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"IngressControllerServicesDegraded\",alertstate=\"firing\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "AuthenticationServiceDegraded",
    "severity": "warning",
    "message": "The Authentication service for K8S API is degraded.",
    "query": "(ALERTS{alertname=\"KubeDeploymentReplicasMismatch\",alertstate=\"firing\",deployment=~\"dex\",namespace=~\"metalk8s-auth\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentGenerationMismatch\",alertstate=\"firing\",deployment=~\"dex\",namespace=~\"metalk8s-auth\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "IngressControllerServicesDegraded",
    "severity": "warning",
    "message": "The Ingress Controllers for control plane and workload plane are degraded.",
    "query": "(ALERTS{alertname=\"KubeDeploymentReplicasMismatch\",alertstate=\"firing\",deployment=~\"ingress-nginx-defaultbackend\",namespace=~\"metalk8s-ingress\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentGenerationMismatch\",alertstate=\"firing\",deployment=~\"ingress-nginx-defaultbackend\",namespace=~\"metalk8s-ingress\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetNotScheduled\",alertstate=\"firing\",daemonset=~\"ingress-nginx-controller\",namespace=~\"metalk8s-ingress\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetMisScheduled\",alertstate=\"firing\",daemonset=~\"ingress-nginx-controller\",namespace=~\"metalk8s-ingress\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetRolloutStuck\",alertstate=\"firing\",daemonset=~\"ingress-nginx-controller\",namespace=~\"metalk8s-ingress\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetNotScheduled\",alertstate=\"firing\",daemonset=~\"ingress-nginx-control-plane-controller\",namespace=~\"metalk8s-ingress\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetMisScheduled\",alertstate=\"firing\",daemonset=~\"ingress-nginx-control-plane-controller\",namespace=~\"metalk8s-ingress\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetRolloutStuck\",alertstate=\"firing\",daemonset=~\"ingress-nginx-control-plane-controller\",namespace=~\"metalk8s-ingress\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "CoreServicesDegraded",
    "severity": "warning",
    "message": "The Core services are degraded.",
    "query": "(ALERTS{alertname=\"KubernetesControlPlaneDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"BootstrapServicesDegraded\",alertstate=\"firing\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "KubernetesControlPlaneDegraded",
    "severity": "warning",
    "message": "The Kubernetes control plane is degraded.",
    "query": "(ALERTS{alertname=\"KubeAPIErrorBudgetBurn\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"etcdHighNumberOfFailedGRPCRequests\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"etcdHTTPRequestsSlow\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"etcdHighCommitDurations\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"etcdHighFsyncDurations\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"etcdHighNumberOfFailedHTTPRequests\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"etcdHighNumberOfFailedProposals\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"etcdHighNumberOfLeaderChanges\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"etcdMemberCommunicationSlow\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeCPUOvercommit\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeCPUQuotaOvercommit\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeMemoryOvercommit\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeMemoryQuotaOvercommit\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeClientCertificateExpiration\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeClientErrors\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeVersionMismatch\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentReplicasMismatch\",alertstate=\"firing\",deployment=~\"coredns\",namespace=~\"kube-system\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentGenerationMismatch\",alertstate=\"firing\",deployment=~\"coredns\",namespace=~\"kube-system\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentReplicasMismatch\",alertstate=\"firing\",deployment=~\"prometheus-adapter\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentGenerationMismatch\",alertstate=\"firing\",deployment=~\"prometheus-adapter\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentReplicasMismatch\",alertstate=\"firing\",deployment=~\"prometheus-operator-kube-state-metrics\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentGenerationMismatch\",alertstate=\"firing\",deployment=~\"prometheus-operator-kube-state-metrics\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "BootstrapServicesDegraded",
    "severity": "warning",
    "message": "The MetalK8s Bootstrap services are degraded.",
    "query": "(ALERTS{alertname=\"KubePodNotReady\",alertstate=\"firing\",namespace=~\"kube-system\",pod=~\"repositories-.*\",severity=\"warning\"} or ALERTS{alertname=\"KubePodNotReady\",alertstate=\"firing\",namespace=~\"kube-system\",pod=~\"salt-master-.*\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentReplicasMismatch\",alertstate=\"firing\",deployment=~\"storage-operator\",namespace=~\"kube-system\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentGenerationMismatch\",alertstate=\"firing\",deployment=~\"storage-operator\",namespace=~\"kube-system\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentReplicasMismatch\",alertstate=\"firing\",deployment=~\"metalk8s-ui\",namespace=~\"metalk8s-ui\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentGenerationMismatch\",alertstate=\"firing\",deployment=~\"metalk8s-ui\",namespace=~\"metalk8s-ui\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "ObservabilityServicesDegraded",
    "severity": "warning",
    "message": "The observability services are degraded.",
    "query": "(ALERTS{alertname=\"MonitoringServiceDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"AlertingServiceDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"LoggingServiceDegraded\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"DashboardingServiceDegraded\",alertstate=\"firing\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "MonitoringServiceDegraded",
    "severity": "warning",
    "message": "The monitoring service is degraded.",
    "query": "(ALERTS{alertname=\"PrometheusTargetLimitHit\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusTSDBReloadsFailing\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusTSDBCompactionsFailing\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusRemoteWriteDesiredShards\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusOutOfOrderTimestamps\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusNotificationQueueRunningFull\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusNotIngestingSamples\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusNotConnectedToAlertmanagers\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusMissingRuleEvaluations\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusErrorSendingAlertsToSomeAlertmanagers\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusDuplicateTimestamps\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusOperatorWatchErrors\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusOperatorSyncFailed\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusOperatorRejectedResources\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusOperatorReconcileErrors\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusOperatorNotReady\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusOperatorNodeLookupErrors\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"PrometheusOperatorListErrors\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeStatefulSetReplicasMismatch\",alertstate=\"firing\",namespace=~\"metalk8s-monitoring\",severity=\"warning\",statefulset=~\"prometheus-prometheus-operator-prometheus\"} or ALERTS{alertname=\"KubeStatefulSetGenerationMismatch\",alertstate=\"firing\",namespace=~\"metalk8s-monitoring\",severity=\"warning\",statefulset=~\"prometheus-prometheus-operator-prometheus\"} or ALERTS{alertname=\"KubeStatefulSetUpdateNotRolledOut\",alertstate=\"firing\",namespace=~\"metalk8s-monitoring\",severity=\"warning\",statefulset=~\"prometheus-prometheus-operator-prometheus\"} or ALERTS{alertname=\"KubeDeploymentReplicasMismatch\",alertstate=\"firing\",deployment=~\"prometheus-operator-operator\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentGenerationMismatch\",alertstate=\"firing\",deployment=~\"prometheus-operator-operator\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetNotScheduled\",alertstate=\"firing\",daemonset=~\"prometheus-operator-prometheus-node-exporter\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetMisScheduled\",alertstate=\"firing\",daemonset=~\"prometheus-operator-prometheus-node-exporter\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetRolloutStuck\",alertstate=\"firing\",daemonset=~\"prometheus-operator-prometheus-node-exporter\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "AlertingServiceDegraded",
    "severity": "warning",
    "message": "The alerting service is degraded.",
    "query": "(ALERTS{alertname=\"AlertmanagerFailedReload\",alertstate=\"firing\",severity=\"warning\"} or ALERTS{alertname=\"KubeStatefulSetReplicasMismatch\",alertstate=\"firing\",namespace=~\"metalk8s-monitoring\",severity=\"warning\",statefulset=~\"alertmanager-prometheus-operator-alertmanager\"} or ALERTS{alertname=\"KubeStatefulSetGenerationMismatch\",alertstate=\"firing\",namespace=~\"metalk8s-monitoring\",severity=\"warning\",statefulset=~\"alertmanager-prometheus-operator-alertmanager\"} or ALERTS{alertname=\"KubeStatefulSetUpdateNotRolledOut\",alertstate=\"firing\",namespace=~\"metalk8s-monitoring\",severity=\"warning\",statefulset=~\"alertmanager-prometheus-operator-alertmanager\"}) >= 1"
  },
  {
    "name": "LoggingServiceDegraded",
    "severity": "warning",
    "message": "The logging service is degraded.",
    "query": "(ALERTS{alertname=\"KubeStatefulSetReplicasMismatch\",alertstate=\"firing\",namespace=~\"metalk8s-logging\",severity=\"warning\",statefulset=~\"loki\"} or ALERTS{alertname=\"KubeStatefulSetGenerationMismatch\",alertstate=\"firing\",namespace=~\"metalk8s-logging\",severity=\"warning\",statefulset=~\"loki\"} or ALERTS{alertname=\"KubeStatefulSetUpdateNotRolledOut\",alertstate=\"firing\",namespace=~\"metalk8s-logging\",severity=\"warning\",statefulset=~\"loki\"} or ALERTS{alertname=\"KubeDaemonSetNotScheduled\",alertstate=\"firing\",daemonset=~\"fluentbit\",namespace=~\"metalk8s-logging\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetMisScheduled\",alertstate=\"firing\",daemonset=~\"fluentbit\",namespace=~\"metalk8s-logging\",severity=\"warning\"} or ALERTS{alertname=\"KubeDaemonSetRolloutStuck\",alertstate=\"firing\",daemonset=~\"fluentbit\",namespace=~\"metalk8s-logging\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "DashboardingServiceDegraded",
    "severity": "warning",
    "message": "The dashboarding service is degraded.",
    "query": "(ALERTS{alertname=\"KubeDeploymentReplicasMismatch\",alertstate=\"firing\",deployment=~\"prometheus-operator-grafana\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"} or ALERTS{alertname=\"KubeDeploymentGenerationMismatch\",alertstate=\"firing\",deployment=~\"prometheus-operator-grafana\",namespace=~\"metalk8s-monitoring\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "VolumeDegraded",
    "severity": "warning",
    "message": "The volume {{ $labels.persistentvolumeclaim }} in namespace {{ $labels.namespace }} on node {{ $labels.instance }} is degraded.",
    "query": "sum by(persistentvolumeclaim, namespace, instance) (ALERTS{alertname=\"KubePersistentVolumeFillingUp\",alertstate=\"firing\",severity=\"warning\"}) >= 1"
  },
  {
    "name": "AlertmanagerFailedReload",
    "severity": "critical",
    "message": "Reloading an Alertmanager configuration has failed.",
    "query": "max_over_time(alertmanager_config_last_reload_successful{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m]) == 0"
  },
  {
    "name": "AlertmanagerMembersInconsistent",
    "severity": "critical",
    "message": "A member of an Alertmanager cluster has not found all other cluster members.",
    "query": "max_over_time(alertmanager_cluster_members{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m]) < on(namespace, service) group_left() count by(namespace, service) (max_over_time(alertmanager_cluster_members{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m]))"
  },
  {
    "name": "AlertmanagerFailedToSendAlerts",
    "severity": "warning",
    "message": "An Alertmanager instance failed to send notifications.",
    "query": "(rate(alertmanager_notifications_failed_total{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m]) / rate(alertmanager_notifications_total{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m])) > 0.01"
  },
  {
    "name": "AlertmanagerClusterFailedToSendAlerts",
    "severity": "critical",
    "message": "All Alertmanager instances in a cluster failed to send notifications to a critical integration.",
    "query": "min by(namespace, service, integration) (rate(alertmanager_notifications_failed_total{integration=~\".*\",job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m]) / rate(alertmanager_notifications_total{integration=~\".*\",job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m])) > 0.01"
  },
  {
    "name": "AlertmanagerClusterFailedToSendAlerts",
    "severity": "warning",
    "message": "All Alertmanager instances in a cluster failed to send notifications to a non-critical integration.",
    "query": "min by(namespace, service, integration) (rate(alertmanager_notifications_failed_total{integration!~\".*\",job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m]) / rate(alertmanager_notifications_total{integration!~\".*\",job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m])) > 0.01"
  },
  {
    "name": "AlertmanagerConfigInconsistent",
    "severity": "critical",
    "message": "Alertmanager instances within the same cluster have different configurations.",
    "query": "count by(namespace, service) (count_values by(namespace, service) (\"config_hash\", alertmanager_config_hash{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"})) != 1"
  },
  {
    "name": "AlertmanagerClusterDown",
    "severity": "critical",
    "message": "Half or more of the Alertmanager instances within the same cluster are down.",
    "query": "(count by(namespace, service) (avg_over_time(up{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[5m]) < 0.5) / count by(namespace, service) (up{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"})) >= 0.5"
  },
  {
    "name": "AlertmanagerClusterCrashlooping",
    "severity": "critical",
    "message": "Half or more of the Alertmanager instances within the same cluster are crashlooping.",
    "query": "(count by(namespace, service) (changes(process_start_time_seconds{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"}[10m]) > 4) / count by(namespace, service) (up{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"})) >= 0.5"
  },
  {
    "name": "etcdInsufficientMembers",
    "severity": "critical",
    "message": "etcd cluster \"{{ $labels.job }}\": insufficient members ({{ $value }}).",
    "query": "sum by(job) (up{job=~\".*etcd.*\"} == bool 1) < ((count by(job) (up{job=~\".*etcd.*\"}) + 1) / 2)"
  },
  {
    "name": "etcdNoLeader",
    "severity": "critical",
    "message": "etcd cluster \"{{ $labels.job }}\": member {{ $labels.instance }} has no leader.",
    "query": "etcd_server_has_leader{job=~\".*etcd.*\"} == 0"
  },
  {
    "name": "etcdHighNumberOfLeaderChanges",
    "severity": "warning",
    "message": "etcd cluster \"{{ $labels.job }}\": instance {{ $labels.instance }} has seen {{ $value }} leader changes within the last hour.",
    "query": "rate(etcd_server_leader_changes_seen_total{job=~\".*etcd.*\"}[15m]) > 3"
  },
  {
    "name": "etcdHighNumberOfFailedGRPCRequests",
    "severity": "warning",
    "message": "etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}.",
    "query": "100 * sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{grpc_code!=\"OK\",job=~\".*etcd.*\"}[5m])) / sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) > 1"
  },
  {
    "name": "etcdHighNumberOfFailedGRPCRequests",
    "severity": "critical",
    "message": "etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}.",
    "query": "100 * sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{grpc_code!=\"OK\",job=~\".*etcd.*\"}[5m])) / sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) > 5"
  },
  {
    "name": "etcdGRPCRequestsSlow",
    "severity": "critical",
    "message": "etcd cluster \"{{ $labels.job }}\": gRPC requests to {{ $labels.grpc_method }} are taking {{ $value }}s on etcd instance {{ $labels.instance }}.",
    "query": "histogram_quantile(0.99, sum by(job, instance, grpc_service, grpc_method, le) (rate(grpc_server_handling_seconds_bucket{grpc_type=\"unary\",job=~\".*etcd.*\"}[5m]))) > 0.15"
  },
  {
    "name": "etcdMemberCommunicationSlow",
    "severity": "warning",
    "message": "etcd cluster \"{{ $labels.job }}\": member communication with {{ $labels.To }} is taking {{ $value }}s on etcd instance {{ $labels.instance }}.",
    "query": "histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket{job=~\".*etcd.*\"}[5m])) > 0.15"
  },
  {
    "name": "etcdHighNumberOfFailedProposals",
    "severity": "warning",
    "message": "etcd cluster \"{{ $labels.job }}\": {{ $value }} proposal failures within the last hour on etcd instance {{ $labels.instance }}.",
    "query": "rate(etcd_server_proposals_failed_total{job=~\".*etcd.*\"}[15m]) > 5"
  },
  {
    "name": "etcdHighFsyncDurations",
    "severity": "warning",
    "message": "etcd cluster \"{{ $labels.job }}\": 99th percentile fync durations are {{ $value }}s on etcd instance {{ $labels.instance }}.",
    "query": "histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=~\".*etcd.*\"}[5m])) > 0.5"
  },
  {
    "name": "etcdHighCommitDurations",
    "severity": "warning",
    "message": "etcd cluster \"{{ $labels.job }}\": 99th percentile commit durations {{ $value }}s on etcd instance {{ $labels.instance }}.",
    "query": "histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket{job=~\".*etcd.*\"}[5m])) > 0.25"
  },
  {
    "name": "etcdHighNumberOfFailedHTTPRequests",
    "severity": "warning",
    "message": "{{ $value }}% of requests for {{ $labels.method }} failed on etcd instance {{ $labels.instance }}",
    "query": "sum by(method) (rate(etcd_http_failed_total{code!=\"404\",job=~\".*etcd.*\"}[5m])) / sum by(method) (rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m])) > 0.01"
  },
  {
    "name": "etcdHighNumberOfFailedHTTPRequests",
    "severity": "critical",
    "message": "{{ $value }}% of requests for {{ $labels.method }} failed on etcd instance {{ $labels.instance }}.",
    "query": "sum by(method) (rate(etcd_http_failed_total{code!=\"404\",job=~\".*etcd.*\"}[5m])) / sum by(method) (rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m])) > 0.05"
  },
  {
    "name": "etcdHTTPRequestsSlow",
    "severity": "warning",
    "message": "etcd instance {{ $labels.instance }} HTTP requests to {{ $labels.method }} are slow.",
    "query": "histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m])) > 0.15"
  },
  {
    "name": "TargetDown",
    "severity": "warning",
    "message": "One or more targets are unreachable.",
    "query": "100 * (count by(job, namespace, service) (up == 0) / count by(job, namespace, service) (up)) > 10"
  },
  {
    "name": "Watchdog",
    "severity": "none",
    "message": "An alert that should always be firing to certify that Alertmanager is working properly.",
    "query": "vector(1)"
  },
  {
    "name": "KubeAPIErrorBudgetBurn",
    "severity": "critical",
    "message": "The API server is burning too much error budget.",
    "query": "sum(apiserver_request:burnrate1h) > (14.4 * 0.01) and sum(apiserver_request:burnrate5m) > (14.4 * 0.01)"
  },
  {
    "name": "KubeAPIErrorBudgetBurn",
    "severity": "critical",
    "message": "The API server is burning too much error budget.",
    "query": "sum(apiserver_request:burnrate6h) > (6 * 0.01) and sum(apiserver_request:burnrate30m) > (6 * 0.01)"
  },
  {
    "name": "KubeAPIErrorBudgetBurn",
    "severity": "warning",
    "message": "The API server is burning too much error budget.",
    "query": "sum(apiserver_request:burnrate1d) > (3 * 0.01) and sum(apiserver_request:burnrate2h) > (3 * 0.01)"
  },
  {
    "name": "KubeAPIErrorBudgetBurn",
    "severity": "warning",
    "message": "The API server is burning too much error budget.",
    "query": "sum(apiserver_request:burnrate3d) > (1 * 0.01) and sum(apiserver_request:burnrate6h) > (1 * 0.01)"
  },
  {
    "name": "KubeStateMetricsListErrors",
    "severity": "critical",
    "message": "kube-state-metrics is experiencing errors in list operations.",
    "query": "(sum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\",result=\"error\"}[5m])) / sum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\"}[5m]))) > 0.01"
  },
  {
    "name": "KubeStateMetricsWatchErrors",
    "severity": "critical",
    "message": "kube-state-metrics is experiencing errors in watch operations.",
    "query": "(sum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\",result=\"error\"}[5m])) / sum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\"}[5m]))) > 0.01"
  },
  {
    "name": "KubeStateMetricsShardingMismatch",
    "severity": "critical",
    "message": "kube-state-metrics sharding is misconfigured.",
    "query": "stdvar(kube_state_metrics_total_shards{job=\"kube-state-metrics\"}) != 0"
  },
  {
    "name": "KubeStateMetricsShardsMissing",
    "severity": "critical",
    "message": "kube-state-metrics shards are missing.",
    "query": "2 ^ max(kube_state_metrics_total_shards{job=\"kube-state-metrics\"}) - 1 - sum(2 ^ max by(shard_ordinal) (kube_state_metrics_shard_ordinal{job=\"kube-state-metrics\"})) != 0"
  },
  {
    "name": "KubePodCrashLooping",
    "severity": "warning",
    "message": "Pod is crash looping.",
    "query": "increase(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\",namespace=~\".*\"}[10m]) > 0"
  },
  {
    "name": "KubePodNotReady",
    "severity": "warning",
    "message": "Pod has been in a non-ready state for more than 15 minutes.",
    "query": "sum by(namespace, pod) (max by(namespace, pod) (kube_pod_status_phase{job=\"kube-state-metrics\",namespace=~\".*\",phase=~\"Pending|Unknown\"}) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!=\"Job\"}))) > 0"
  },
  {
    "name": "KubeDeploymentGenerationMismatch",
    "severity": "warning",
    "message": "Deployment generation mismatch due to possible roll-back",
    "query": "kube_deployment_status_observed_generation{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_deployment_metadata_generation{job=\"kube-state-metrics\",namespace=~\".*\"}"
  },
  {
    "name": "KubeDeploymentReplicasMismatch",
    "severity": "warning",
    "message": "Deployment has not matched the expected number of replicas.",
    "query": "(kube_deployment_spec_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_deployment_status_replicas_available{job=\"kube-state-metrics\",namespace=~\".*\"}) and (changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"}[10m]) == 0)"
  },
  {
    "name": "KubeStatefulSetReplicasMismatch",
    "severity": "warning",
    "message": "Deployment has not matched the expected number of replicas.",
    "query": "(kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_statefulset_status_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and (changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"}[10m]) == 0)"
  },
  {
    "name": "KubeStatefulSetGenerationMismatch",
    "severity": "warning",
    "message": "StatefulSet generation mismatch due to possible roll-back",
    "query": "kube_statefulset_status_observed_generation{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_statefulset_metadata_generation{job=\"kube-state-metrics\",namespace=~\".*\"}"
  },
  {
    "name": "KubeStatefulSetUpdateNotRolledOut",
    "severity": "warning",
    "message": "StatefulSet update has not been rolled out.",
    "query": "(max without(revision) (kube_statefulset_status_current_revision{job=\"kube-state-metrics\",namespace=~\".*\"} unless kube_statefulset_status_update_revision{job=\"kube-state-metrics\",namespace=~\".*\"}) * (kube_statefulset_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"})) and (changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"}[5m]) == 0)"
  },
  {
    "name": "KubeDaemonSetRolloutStuck",
    "severity": "warning",
    "message": "DaemonSet rollout is stuck.",
    "query": "((kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"}) or (kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\",namespace=~\".*\"} != 0) or (kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"}) or (kube_daemonset_status_number_available{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"})) and (changes(kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"}[5m]) == 0)"
  },
  {
    "name": "KubeContainerWaiting",
    "severity": "warning",
    "message": "Pod container waiting longer than 1 hour",
    "query": "sum by(namespace, pod, container) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\",namespace=~\".*\"}) > 0"
  },
  {
    "name": "KubeDaemonSetNotScheduled",
    "severity": "warning",
    "message": "DaemonSet pods are not scheduled.",
    "query": "kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} - kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} > 0"
  },
  {
    "name": "KubeDaemonSetMisScheduled",
    "severity": "warning",
    "message": "DaemonSet pods are misscheduled.",
    "query": "kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\",namespace=~\".*\"} > 0"
  },
  {
    "name": "KubeJobCompletion",
    "severity": "warning",
    "message": "Job did not complete in time",
    "query": "kube_job_spec_completions{job=\"kube-state-metrics\",namespace=~\".*\"} - kube_job_status_succeeded{job=\"kube-state-metrics\",namespace=~\".*\"} > 0"
  },
  {
    "name": "KubeJobFailed",
    "severity": "warning",
    "message": "Job failed to complete.",
    "query": "kube_job_failed{job=\"kube-state-metrics\",namespace=~\".*\"} > 0"
  },
  {
    "name": "KubeHpaReplicasMismatch",
    "severity": "warning",
    "message": "HPA has not matched descired number of replicas.",
    "query": "(kube_hpa_status_desired_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and (kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} > kube_hpa_spec_min_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and (kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} < kube_hpa_spec_max_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and changes(kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}[15m]) == 0"
  },
  {
    "name": "KubeHpaMaxedOut",
    "severity": "warning",
    "message": "HPA is running at max replicas",
    "query": "kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} == kube_hpa_spec_max_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}"
  },
  {
    "name": "KubeCPUOvercommit",
    "severity": "warning",
    "message": "Cluster has overcommitted CPU resource requests.",
    "query": "sum(namespace_cpu:kube_pod_container_resource_requests:sum) / sum(kube_node_status_allocatable{resource=\"cpu\"}) > ((count(kube_node_status_allocatable{resource=\"cpu\"}) > 1) - 1) / count(kube_node_status_allocatable{resource=\"cpu\"})"
  },
  {
    "name": "KubeMemoryOvercommit",
    "severity": "warning",
    "message": "Cluster has overcommitted memory resource requests.",
    "query": "sum(namespace_memory:kube_pod_container_resource_requests:sum) / sum(kube_node_status_allocatable{resource=\"memory\"}) > ((count(kube_node_status_allocatable{resource=\"memory\"}) > 1) - 1) / count(kube_node_status_allocatable{resource=\"memory\"})"
  },
  {
    "name": "KubeCPUQuotaOvercommit",
    "severity": "warning",
    "message": "Cluster has overcommitted CPU resource requests.",
    "query": "sum(kube_resourcequota{job=\"kube-state-metrics\",resource=\"cpu\",type=\"hard\"}) / sum(kube_node_status_allocatable{resource=\"cpu\"}) > 1.5"
  },
  {
    "name": "KubeMemoryQuotaOvercommit",
    "severity": "warning",
    "message": "Cluster has overcommitted memory resource requests.",
    "query": "sum(kube_resourcequota{job=\"kube-state-metrics\",resource=\"memory\",type=\"hard\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"memory\"}) > 1.5"
  },
  {
    "name": "KubeQuotaAlmostFull",
    "severity": "info",
    "message": "Namespace quota is going to be full.",
    "query": "kube_resourcequota{job=\"kube-state-metrics\",type=\"used\"} / ignoring(instance, job, type) (kube_resourcequota{job=\"kube-state-metrics\",type=\"hard\"} > 0) > 0.9 < 1"
  },
  {
    "name": "KubeQuotaFullyUsed",
    "severity": "info",
    "message": "Namespace quota is fully used.",
    "query": "kube_resourcequota{job=\"kube-state-metrics\",type=\"used\"} / ignoring(instance, job, type) (kube_resourcequota{job=\"kube-state-metrics\",type=\"hard\"} > 0) == 1"
  },
  {
    "name": "KubeQuotaExceeded",
    "severity": "warning",
    "message": "Namespace quota has exceeded the limits.",
    "query": "kube_resourcequota{job=\"kube-state-metrics\",type=\"used\"} / ignoring(instance, job, type) (kube_resourcequota{job=\"kube-state-metrics\",type=\"hard\"} > 0) > 1"
  },
  {
    "name": "CPUThrottlingHigh",
    "severity": "info",
    "message": "Processes experience elevated CPU throttling.",
    "query": "sum by(container, pod, namespace) (increase(container_cpu_cfs_throttled_periods_total{container!=\"\"}[5m])) / sum by(container, pod, namespace) (increase(container_cpu_cfs_periods_total[5m])) > (25 / 100)"
  },
  {
    "name": "KubePersistentVolumeFillingUp",
    "severity": "critical",
    "message": "PersistentVolume is filling up.",
    "query": "kubelet_volume_stats_available_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"} < 0.03"
  },
  {
    "name": "KubePersistentVolumeFillingUp",
    "severity": "warning",
    "message": "PersistentVolume is filling up.",
    "query": "(kubelet_volume_stats_available_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"}) < 0.15 and predict_linear(kubelet_volume_stats_available_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"}[6h], 4 * 24 * 3600) < 0"
  },
  {
    "name": "KubePersistentVolumeErrors",
    "severity": "critical",
    "message": "PersistentVolume is having issues with provisioning.",
    "query": "kube_persistentvolume_status_phase{job=\"kube-state-metrics\",phase=~\"Failed|Pending\"} > 0"
  },
  {
    "name": "KubeClientCertificateExpiration",
    "severity": "warning",
    "message": "Client certificate is about to expire.",
    "query": "apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by(job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 604800"
  },
  {
    "name": "KubeClientCertificateExpiration",
    "severity": "critical",
    "message": "Client certificate is about to expire.",
    "query": "apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by(job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 86400"
  },
  {
    "name": "AggregatedAPIErrors",
    "severity": "warning",
    "message": "An aggregated API has reported errors.",
    "query": "sum by(name, namespace) (increase(aggregator_unavailable_apiservice_total[10m])) > 4"
  },
  {
    "name": "AggregatedAPIDown",
    "severity": "warning",
    "message": "An aggregated API is down.",
    "query": "(1 - max by(name, namespace) (avg_over_time(aggregator_unavailable_apiservice[10m]))) * 100 < 85"
  },
  {
    "name": "KubeAPIDown",
    "severity": "critical",
    "message": "Target disappeared from Prometheus target discovery.",
    "query": "absent(up{job=\"apiserver\"} == 1)"
  },
  {
    "name": "KubeAPITerminatedRequests",
    "severity": "warning",
    "message": "The apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests.",
    "query": "sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m])) / (sum(rate(apiserver_request_total{job=\"apiserver\"}[10m])) + sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m]))) > 0.2"
  },
  {
    "name": "KubeControllerManagerDown",
    "severity": "critical",
    "message": "Target disappeared from Prometheus target discovery.",
    "query": "absent(up{job=\"kube-controller-manager\"} == 1)"
  },
  {
    "name": "KubeNodeNotReady",
    "severity": "warning",
    "message": "Node is not ready.",
    "query": "kube_node_status_condition{condition=\"Ready\",job=\"kube-state-metrics\",status=\"true\"} == 0"
  },
  {
    "name": "KubeNodeUnreachable",
    "severity": "warning",
    "message": "Node is unreachable.",
    "query": "(kube_node_spec_taint{effect=\"NoSchedule\",job=\"kube-state-metrics\",key=\"node.kubernetes.io/unreachable\"} unless ignoring(key, value) kube_node_spec_taint{job=\"kube-state-metrics\",key=~\"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn\"}) == 1"
  },
  {
    "name": "KubeletTooManyPods",
    "severity": "warning",
    "message": "Kubelet is running at capacity.",
    "query": "count by(node) ((kube_pod_status_phase{job=\"kube-state-metrics\",phase=\"Running\"} == 1) * on(instance, pod, namespace, cluster) group_left(node) topk by(instance, pod, namespace, cluster) (1, kube_pod_info{job=\"kube-state-metrics\"})) / max by(node) (kube_node_status_capacity{job=\"kube-state-metrics\",resource=\"pods\"} != 1) > 0.95"
  },
  {
    "name": "KubeNodeReadinessFlapping",
    "severity": "warning",
    "message": "Node readiness status is flapping.",
    "query": "sum by(node) (changes(kube_node_status_condition{condition=\"Ready\",status=\"true\"}[15m])) > 2"
  },
  {
    "name": "KubeletPlegDurationHigh",
    "severity": "warning",
    "message": "Kubelet Pod Lifecycle Event Generator is taking too long to relist.",
    "query": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile=\"0.99\"} >= 10"
  },
  {
    "name": "KubeletPodStartUpLatencyHigh",
    "severity": "warning",
    "message": "Kubelet Pod startup latency is too high.",
    "query": "histogram_quantile(0.99, sum by(instance, le) (rate(kubelet_pod_worker_duration_seconds_bucket{job=\"kubelet\",metrics_path=\"/metrics\"}[5m]))) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"} > 60"
  },
  {
    "name": "KubeletClientCertificateExpiration",
    "severity": "warning",
    "message": "Kubelet client certificate is about to expire.",
    "query": "kubelet_certificate_manager_client_ttl_seconds < 604800"
  },
  {
    "name": "KubeletClientCertificateExpiration",
    "severity": "critical",
    "message": "Kubelet client certificate is about to expire.",
    "query": "kubelet_certificate_manager_client_ttl_seconds < 86400"
  },
  {
    "name": "KubeletServerCertificateExpiration",
    "severity": "warning",
    "message": "Kubelet server certificate is about to expire.",
    "query": "kubelet_certificate_manager_server_ttl_seconds < 604800"
  },
  {
    "name": "KubeletServerCertificateExpiration",
    "severity": "critical",
    "message": "Kubelet server certificate is about to expire.",
    "query": "kubelet_certificate_manager_server_ttl_seconds < 86400"
  },
  {
    "name": "KubeletClientCertificateRenewalErrors",
    "severity": "warning",
    "message": "Kubelet has failed to renew its client certificate.",
    "query": "increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0"
  },
  {
    "name": "KubeletServerCertificateRenewalErrors",
    "severity": "warning",
    "message": "Kubelet has failed to renew its server certificate.",
    "query": "increase(kubelet_server_expiration_renew_errors[5m]) > 0"
  },
  {
    "name": "KubeletDown",
    "severity": "critical",
    "message": "Target disappeared from Prometheus target discovery.",
    "query": "absent(up{job=\"kubelet\",metrics_path=\"/metrics\"} == 1)"
  },
  {
    "name": "KubeSchedulerDown",
    "severity": "critical",
    "message": "Target disappeared from Prometheus target discovery.",
    "query": "absent(up{job=\"kube-scheduler\"} == 1)"
  },
  {
    "name": "KubeVersionMismatch",
    "severity": "warning",
    "message": "Different semantic versions of Kubernetes components running.",
    "query": "count(count by(git_version) (label_replace(kubernetes_build_info{job!~\"kube-dns|coredns\"}, \"git_version\", \"$1\", \"git_version\", \"(v[0-9]*.[0-9]*).*\"))) > 1"
  },
  {
    "name": "KubeClientErrors",
    "severity": "warning",
    "message": "Kubernetes API server client is experiencing errors.",
    "query": "(sum by(instance, job) (rate(rest_client_requests_total{code=~\"5..\"}[5m])) / sum by(instance, job) (rate(rest_client_requests_total[5m]))) > 0.01"
  },
  {
    "name": "NodeFilesystemSpaceFillingUp",
    "severity": "warning",
    "message": "Filesystem is predicted to run out of space within the next 24 hours.",
    "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 40 and predict_linear(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"}[6h], 24 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)"
  },
  {
    "name": "NodeFilesystemSpaceFillingUp",
    "severity": "critical",
    "message": "Filesystem is predicted to run out of space within the next 4 hours.",
    "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 20 and predict_linear(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"}[6h], 4 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)"
  },
  {
    "name": "NodeFilesystemAlmostOutOfSpace",
    "severity": "warning",
    "message": "Filesystem has less than 20% space left.",
    "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 20 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)"
  },
  {
    "name": "NodeFilesystemAlmostOutOfSpace",
    "severity": "critical",
    "message": "Filesystem has less than 12% space left.",
    "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 12 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)"
  },
  {
    "name": "NodeFilesystemFilesFillingUp",
    "severity": "warning",
    "message": "Filesystem is predicted to run out of inodes within the next 24 hours.",
    "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 40 and predict_linear(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"}[6h], 24 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)"
  },
  {
    "name": "NodeFilesystemFilesFillingUp",
    "severity": "critical",
    "message": "Filesystem is predicted to run out of inodes within the next 4 hours.",
    "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 20 and predict_linear(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"}[6h], 4 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)"
  },
  {
    "name": "NodeFilesystemAlmostOutOfFiles",
    "severity": "warning",
    "message": "Filesystem has less than 15% inodes left.",
    "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 15 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)"
  },
  {
    "name": "NodeFilesystemAlmostOutOfFiles",
    "severity": "critical",
    "message": "Filesystem has less than 8% inodes left.",
    "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 8 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)"
  },
  {
    "name": "NodeNetworkReceiveErrs",
    "severity": "warning",
    "message": "Network interface is reporting many receive errors.",
    "query": "increase(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01"
  },
  {
    "name": "NodeNetworkTransmitErrs",
    "severity": "warning",
    "message": "Network interface is reporting many transmit errors.",
    "query": "increase(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01"
  },
  {
    "name": "NodeHighNumberConntrackEntriesUsed",
    "severity": "warning",
    "message": "Number of conntrack are getting close to the limit",
    "query": "(node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75"
  },
  {
    "name": "NodeClockSkewDetected",
    "severity": "warning",
    "message": "Clock on {{ $labels.instance }} is out of sync by more than 300s. Ensure NTP is configured correctly on this host.",
    "query": "(node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0)"
  },
  {
    "name": "NodeClockNotSynchronising",
    "severity": "warning",
    "message": "Clock on {{ $labels.instance }} is not synchronising. Ensure NTP is configured on this host.",
    "query": "min_over_time(node_timex_sync_status[5m]) == 0 and node_timex_maxerror_seconds >= 16"
  },
  {
    "name": "NodeTextFileCollectorScrapeError",
    "severity": "warning",
    "message": "Node Exporter text file collector failed to scrape.",
    "query": "node_textfile_scrape_error{job=\"node-exporter\"} == 1"
  },
  {
    "name": "NodeRAIDDegraded",
    "severity": "critical",
    "message": "RAID Array is degraded",
    "query": "node_md_disks_required - ignoring(state) (node_md_disks{state=\"active\"}) >= 1"
  },
  {
    "name": "NodeRAIDDiskFailure",
    "severity": "warning",
    "message": "Failed device in RAID array",
    "query": "node_md_disks{state=\"failed\"} >= 1"
  },
  {
    "name": "NodeNetworkInterfaceFlapping",
    "severity": "warning",
    "message": "Network interface \"{{ $labels.device }}\" changing it's up status often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}",
    "query": "changes(node_network_up{device!~\"veth.+\",job=\"node-exporter\"}[2m]) > 2"
  },
  {
    "name": "PrometheusOperatorListErrors",
    "severity": "warning",
    "message": "Errors while performing list operations in controller.",
    "query": "(sum by(controller, namespace) (rate(prometheus_operator_list_operations_failed_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[10m])) / sum by(controller, namespace) (rate(prometheus_operator_list_operations_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[10m]))) > 0.4"
  },
  {
    "name": "PrometheusOperatorWatchErrors",
    "severity": "warning",
    "message": "Errors while performing watch operations in controller.",
    "query": "(sum by(controller, namespace) (rate(prometheus_operator_watch_operations_failed_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[10m])) / sum by(controller, namespace) (rate(prometheus_operator_watch_operations_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[10m]))) > 0.4"
  },
  {
    "name": "PrometheusOperatorSyncFailed",
    "severity": "warning",
    "message": "Last controller reconciliation failed",
    "query": "min_over_time(prometheus_operator_syncs{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\",status=\"failed\"}[5m]) > 0"
  },
  {
    "name": "PrometheusOperatorReconcileErrors",
    "severity": "warning",
    "message": "Errors while reconciling controller.",
    "query": "(sum by(controller, namespace) (rate(prometheus_operator_reconcile_errors_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]))) / (sum by(controller, namespace) (rate(prometheus_operator_reconcile_operations_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]))) > 0.1"
  },
  {
    "name": "PrometheusOperatorNodeLookupErrors",
    "severity": "warning",
    "message": "Errors while reconciling Prometheus.",
    "query": "rate(prometheus_operator_node_address_lookup_errors_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]) > 0.1"
  },
  {
    "name": "PrometheusOperatorNotReady",
    "severity": "warning",
    "message": "Prometheus operator not ready",
    "query": "min by(namespace, controller) (max_over_time(prometheus_operator_ready{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]) == 0)"
  },
  {
    "name": "PrometheusOperatorRejectedResources",
    "severity": "warning",
    "message": "Resources rejected by Prometheus operator",
    "query": "min_over_time(prometheus_operator_managed_resources{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\",state=\"rejected\"}[5m]) > 0"
  },
  {
    "name": "PrometheusBadConfig",
    "severity": "critical",
    "message": "Failed Prometheus configuration reload.",
    "query": "max_over_time(prometheus_config_last_reload_successful{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) == 0"
  },
  {
    "name": "PrometheusNotificationQueueRunningFull",
    "severity": "warning",
    "message": "Prometheus alert notification queue predicted to run full in less than 30m.",
    "query": "(predict_linear(prometheus_notifications_queue_length{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m], 60 * 30) > min_over_time(prometheus_notifications_queue_capacity{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]))"
  },
  {
    "name": "PrometheusErrorSendingAlertsToSomeAlertmanagers",
    "severity": "warning",
    "message": "Prometheus has encountered more than 1% errors sending alerts to a specific Alertmanager.",
    "query": "(rate(prometheus_notifications_errors_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) / rate(prometheus_notifications_sent_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) * 100 > 1"
  },
  {
    "name": "PrometheusNotConnectedToAlertmanagers",
    "severity": "warning",
    "message": "Prometheus is not connected to any Alertmanagers.",
    "query": "max_over_time(prometheus_notifications_alertmanagers_discovered{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) < 1"
  },
  {
    "name": "PrometheusTSDBReloadsFailing",
    "severity": "warning",
    "message": "Prometheus has issues reloading blocks from disk.",
    "query": "increase(prometheus_tsdb_reloads_failures_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[3h]) > 0"
  },
  {
    "name": "PrometheusTSDBCompactionsFailing",
    "severity": "warning",
    "message": "Prometheus has issues compacting blocks.",
    "query": "increase(prometheus_tsdb_compactions_failed_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[3h]) > 0"
  },
  {
    "name": "PrometheusNotIngestingSamples",
    "severity": "warning",
    "message": "Prometheus is not ingesting samples.",
    "query": "(rate(prometheus_tsdb_head_samples_appended_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) <= 0 and (sum without(scrape_job) (prometheus_target_metadata_cache_entries{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}) > 0 or sum without(rule_group) (prometheus_rule_group_rules{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}) > 0))"
  },
  {
    "name": "PrometheusDuplicateTimestamps",
    "severity": "warning",
    "message": "Prometheus is dropping samples with duplicate timestamps.",
    "query": "rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0"
  },
  {
    "name": "PrometheusOutOfOrderTimestamps",
    "severity": "warning",
    "message": "Prometheus drops samples with out-of-order timestamps.",
    "query": "rate(prometheus_target_scrapes_sample_out_of_order_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0"
  },
  {
    "name": "PrometheusRemoteStorageFailures",
    "severity": "critical",
    "message": "Prometheus fails to send samples to remote storage.",
    "query": "((rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) / ((rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) + (rate(prometheus_remote_storage_succeeded_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) or rate(prometheus_remote_storage_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])))) * 100 > 1"
  },
  {
    "name": "PrometheusRemoteWriteBehind",
    "severity": "critical",
    "message": "Prometheus remote write is behind.",
    "query": "(max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) - ignoring(remote_name, url) group_right() max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) > 120"
  },
  {
    "name": "PrometheusRemoteWriteDesiredShards",
    "severity": "warning",
    "message": "Prometheus remote write desired shards calculation wants to run more than configured max shards.",
    "query": "(max_over_time(prometheus_remote_storage_shards_desired{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > max_over_time(prometheus_remote_storage_shards_max{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]))"
  },
  {
    "name": "PrometheusRuleFailures",
    "severity": "critical",
    "message": "Prometheus is failing rule evaluations.",
    "query": "increase(prometheus_rule_evaluation_failures_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0"
  },
  {
    "name": "PrometheusMissingRuleEvaluations",
    "severity": "warning",
    "message": "Prometheus is missing rule evaluations due to slow rule group evaluation.",
    "query": "increase(prometheus_rule_group_iterations_missed_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0"
  },
  {
    "name": "PrometheusTargetLimitHit",
    "severity": "warning",
    "message": "Prometheus has dropped targets because some scrape configs have exceeded the targets limit.",
    "query": "increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0"
  },
  {
    "name": "PrometheusLabelLimitHit",
    "severity": "warning",
    "message": "Prometheus has dropped targets because some scrape configs have exceeded the labels limit.",
    "query": "increase(prometheus_target_scrape_pool_exceeded_label_limits_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0"
  },
  {
    "name": "PrometheusErrorSendingAlertsToAnyAlertmanager",
    "severity": "critical",
    "message": "Prometheus encounters more than 3% errors sending alerts to any Alertmanager.",
    "query": "min without(alertmanager) (rate(prometheus_notifications_errors_total{alertmanager!~\"\",job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) / rate(prometheus_notifications_sent_total{alertmanager!~\"\",job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) * 100 > 3"
  }
]
